AWSTemplateFormatVersion: 2010-09-09
Description: For hooking a worker in the base vpc
# Metadata:

Parameters:
  AMIId:
    Description: AMI ID to use
    Type: AWS::EC2::Image::Id
    Default: ami-002ab867b8b8591d5
  ClusterBaseStackName:
    Description: The name of the cluster to build into
    Type: String
  BaseVPCStackName:
    Description: The name of the VPC to inherit from
    Type: String

  # Pass the roles actions in config, not IaC
  InstanceType:
    Description: Size of root volumes
    Type: String
    Default: "t2.micro"
  InstanceRoleActions:
    Description: The comma separated list of actions for the instance iam role policy
    Type: CommaDelimitedList
    Default: "sts:AssumeRole,autoscaling:DescribeAutoScalingInstances,autoscaling:DescribeAutoScalingGroups,route53:ListHostedZonesByName,route53:ChangeResourceRecordSets,ec2:DescribeInstances,ecr:*"
  RootVolumeSize:
    Description: Size of root volumes
    Type: String
    Default: "8"

  OwnerTag:
    Description: Value for the 'Owner' tag
    Type: String
    Default: ""
  ProjectTag:
    Description: Value for the 'Project' tag
    Type: String
    Default: ""
  EnvironmentTag:
    Description: Value for the 'Environment' tag
    Type: String
    Default: ""
# Mappings:

Conditions:
  InheritOwnerTag:
    Fn::Equals:
      - Ref: OwnerTag
      - ""
  InheritProjectTag:
    Fn::Equals:
      - Ref: ProjectTag
      - ""
  InheritEnvironmentTag:
    Fn::Equals:
      - Ref: EnvironmentTag
      - ""

Resources:
  ClusterBaseIAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM
      Policies:
        - PolicyName:
            Fn::Sub: ${AWS::StackName}-cluster-policy
          PolicyDocument:
            Statement:
              - Condition:
                  ForAllValues:StringLike:
                    ec2:ResourceTag:
                      - Fn::If:
                          - InheritOwnerTag
                          - Fn::ImportValue:
                              Fn::Sub: ${ClusterBaseStackName}-OwnerTag
                          - Ref: OwnerTag
                      - Fn::If:
                          - InheritEnvironmentTag
                          - Fn::ImportValue:
                              Fn::Sub: ${ClusterBaseStackName}-EnvironmentTag
                          - Ref: EnvironmentTag
                Resource: "*"
                Action:
                  Ref: InstanceRoleActions
                Effect: Allow
              # - Sid: AllowKMS
              #   Effect: Allow
              #   Action:
              #     - kms:CreateGrant
              #     - kms:Decrypt
              #     - kms:Describe*
              #     - kms:Encrypt
              #     - kms:GenerateDataKey*
              #     - kms:ReEncrypt*
              #   Resource:
              #     Fn::ImportValue:
              #       Fn::Sub: ${ClusterBaseStackName}-KMSKeyName

  PublicAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    # Condition: PublicIPAs
    Properties:
      LaunchConfigurationName:
        Ref: LaunchConfig
      AvailabilityZones:
        - Fn::ImportValue:
            Fn::Sub: ${BaseVPCStackName}-AZ-1
      VPCZoneIdentifier:
        - Fn::ImportValue:
            Fn::Sub: ${BaseVPCStackName}-PublicSubnetId1
      TerminationPolicies:
        - OldestInstance
      MinSize: "0"
      MaxSize: "100"
      Tags:
        - Key: Name
          Value:
            Fn::Sub: ${AWS::StackName}-pool
          PropagateAtLaunch: true
        - Key: Owner
          Value:
            Fn::If:
              - InheritOwnerTag
              - Fn::ImportValue:
                  Fn::Sub: ${ClusterBaseStackName}-OwnerTag
              - Ref: OwnerTag
          PropagateAtLaunch: true
        - Key: Project
          Value:
            Fn::If:
              - InheritOwnerTag
              - Fn::ImportValue:
                  Fn::Sub: ${ClusterBaseStackName}-ProjectTag
              - Ref: ProjectTag
          PropagateAtLaunch: true
        - Key: Environment
          Value:
            Fn::If:
              - InheritEnvironmentTag
              - Fn::ImportValue:
                  Fn::Sub: ${ClusterBaseStackName}-EnvironmentTag
              - Ref: EnvironmentTag
          PropagateAtLaunch: true

  LaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId:
        Ref: AMIId
      AssociatePublicIpAddress: true
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeSize:
              Ref: RootVolumeSize
            VolumeType: gp2
        - DeviceName: /dev/xvdb
          VirtualName: ephemeral0
      InstanceType:
        Ref: InstanceType
      IamInstanceProfile:
        Ref: WorkerRoleProfile
      KeyName:
        Fn::ImportValue:
          Fn::Sub: ${ClusterBaseStackName}-KMSKeyName
      SecurityGroups:
        - Fn::ImportValue:
            Fn::Sub: ${ClusterBaseStackName}-ClusterSGId

  WorkerIamRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM
      Policies:
        - PolicyName:
            Fn::Sub: ${AWS::StackName}-OS-policy
          PolicyDocument:
            Statement:
              - Condition:
                  ForAllValues:StringLike:
                    ec2:ResourceTag:
                      - Fn::If:
                          - InheritOwnerTag
                          - Fn::ImportValue:
                              Fn::Sub: ${ClusterBaseStackName}-OwnerTag
                          - Ref: OwnerTag
                      - Fn::If:
                          - InheritEnvironmentTag
                          - Fn::ImportValue:
                              Fn::Sub: ${ClusterBaseStackName}-EnvironmentTag
                          - Ref: EnvironmentTag
                Resource: "*"
                Action:
                  Ref: InstanceRoleActions
                Effect: Allow

  WorkerRoleProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - Ref: WorkerIamRole
